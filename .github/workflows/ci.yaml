name: Payment-Service CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven

      - name: Initialize MongoDB user
        run: |
          docker exec $(docker ps -q -f "ancestor=mongo:6") mongosh -u ${{ secrets.MONGO_INITDB_ROOT_USERNAME }} -p ${{ secrets.MONGO_INITDB_ROOT_PASSWORD }} --authenticationDatabase admin ${{ secrets.MONGO_INITDB_DATABASE }} --eval "db.createUser({ user: '${{ secrets.MONGO_INITDB_ROOT_USERNAME }}', pwd: '${{ secrets.MONGO_INITDB_ROOT_PASSWORD }}', roles: [ { role: 'readWrite', db: '${{ secrets.MONGO_INITDB_DATABASE }}' } ] })"

      - name: Build Application
        run: mvn clean install -DskipTests

      - name: Run Tests with JaCoCo Coverage
        run: mvn test verify jacoco:report -e -X



      - name: Debug Kafka Logs
        if: failure()
        run: |
          docker logs $(docker ps -a --filter "ancestor=bitnami/kafka:3.8" --format "{{.ID}}") | tail -200
          docker inspect $(docker ps -a --filter "ancestor=bitnami/kafka:3.8" --format "{{.ID}}")
          docker exec $(docker ps -a --filter "ancestor=bitnami/kafka:3.8" --format "{{.ID}}") nc -z localhost 9092 || echo "nc -z localhost 9092 failed"
          docker exec $(docker ps -a --filter "ancestor=bitnami/kafka:3.8" --format "{{.ID}}") kafka-topics.sh --bootstrap-server localhost:9092 --list || echo "kafka-topics.sh --list failed"

      - name: SonarQube Code Analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=AlexOsinovi_Payment-Service

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Docker Metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ secrets.DOCKERHUB_USERNAME }}/payment-service
          tags: |
            type=raw,value=latest
            type=sha

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v6.18.0
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}