spring.application.name=Payment-Service
spring.data.mongodb.database=${MONGO_INITDB_DATABASE}
spring.data.mongodb.host=${MONGO_INITDB_HOST}
spring.data.mongodb.port=27017
spring.data.mongodb.username=${MONGO_INITDB_ROOT_USERNAME}
spring.data.mongodb.password=${MONGO_INITDB_ROOT_PASSWORD}
server.port=8085

spring.config.import=optional:file:.env[.properties]

spring.kafka.bootstrap-servers=localhost:9092

spring.kafka.topics.orders=orders-topic
spring.kafka.topics.payments=payments-topic
spring.kafka.consumer.group-id=payment-group

spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.properties.spring.json.add.type.headers=false
spring.kafka.producer.properties.transactional.id=payment-service-1

spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.isolation-level=read_committed

spring.kafka.consumer.properties.spring.json.trusted.packages=by.osinovi.*
spring.kafka.consumer.properties.spring.json.value.default.type=by.osinovi.paymentservice.dto.OrderMessage



logging.level.by.osinovi=DEBUG
